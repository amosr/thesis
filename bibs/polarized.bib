% Streaming
@inproceedings{bernardy2015duality,
  author    = {Jean-Philippe Bernardy and Josef Svenningsson},
  title     = {On the Duality of Streams.
               How Can Linear Types Help to Solve the Lazy {IO} Problem?},
  booktitle = {IFL: Implementation and Application of Functional Languages},
  year      = {2015}
}

% Pull and push arrays in Obsidian
% Here the distinction is made for the purpose of code generation for GPUs rather than fusion, as operations like append on pull arrays require conditionals inside the loop, whereas using push arrays moves these conditionals outside the loop.
@inproceedings{claessen2012expressive,
  author    = {Koen Claessen and
               Mary Sheeran and
               Joel Svensson},
  title     = {Expressive array constructs in an embedded {GPU} kernel programming
               language},
  booktitle = {DAMP: Declarative Aspects of Multicore Programming},
  year      = {2012},
}


% Describes fundamental difference between push and pull
@inproceedings{kay2009you,
  title={You pull, I'll push: on the polarity of pipelines},
  author={Kay, Michael},
  booktitle={Balisage: The Markup Conference},
  year={2009}
}

@inproceedings{lippmeier2016polarized,
  title={Polarized data parallel data flow},
  author={Lippmeier, Ben and Mackay, Fil and Robinson, Amos},
  booktitle={Proceedings of the 5th International Workshop on Functional High-Performance Computing},
  year={2016},
}

