% -- A --

% Runtime Deadlock detection
@inproceedings{allen2007distributed,
  title={A distributed deadlock detection and resolution algorithm for process networks},
  author={Allen, Gregory E and Zucknick, Paul E and Evans, Brian L},
  booktitle={Acoustics, Speech and Signal Processing, 2007. ICASSP 2007. IEEE International Conference on},
  volume={2},
  pages={II--33},
  year={2007},
  organization={IEEE}
}

% -- B --
@inproceedings{bharath2004runtime,
  title={A runtime mechanism for detection of artificial deadlocks in process networks},
  author={Bharath, N and Nandy, SK},
  booktitle={Circuits and Systems, 2004. MWSCAS'04. The 2004 47th Midwest Symposium on},
  year={2004}
}

% Brock-Ackerman merge anomaly: non-deterministic merge inside a process network.
% Case where two different process networks have the same history relation, but act differently, depending on the strictness / order of reading from channels.
@inproceedings{brock1981scenarios,
  title={Scenarios: A model of non-determinate computation},
  author={Brock, J Dean and Ackerman, William B},
  booktitle={Formalization of programming concepts},
  pages={252--259},
  year={1981},
  organization={Springer}
}

% -- C --

% -- D --

% -- E --

% -- F --

% Similar work on fusing KPNs but requires a separate schedule to be specified.
% Also uses synchronised product, so unable to fuse cases like (zip xs ys; zip ys xs)
@inproceedings{fradet2004network,
  title={Network fusion},
  author={Fradet, Pascal and Ha, St{\'e}phane Hong Tuan},
  publisher={{Springer}},
  year={2004},
  booktitle = {Programming Languages and Systems: Second Asian Symposium, {APLAS}
               2004, Taipei, Taiwan, November 4-6, 2004. Proceedings},
  pages     = {21--40},
}


% -- G --

% Dynamic scheduling of KPNs across multiple threads.
% Dynamically increase size of FIFO buffers as required.
% Notes that Parks' scheduling algorithm is incorrect in presence of local deadlocks - does not guarantee fairness
@incollection{geilen2003requirements,
  author    = {Marc Geilen and
               Twan Basten},
  title     = {Requirements on the Execution of {K}ahn Process Networks},
  booktitle = {Programming Languages and Systems, 12th European Symposium on Programming,
               {ESOP} 2003, Held as Part of the Joint European Conferences on Theory
               and Practice of Software, {ETAPS} 2003, Warsaw, Poland, April 7-11,
               2003, Proceedings},
  pages     = {319--334},
  year      = {2003},
  url       = {https://doi.org/10.1007/3-540-36575-3\_22},
  doi       = {10.1007/3-540-36575-3\_22},
  series    = {Lecture Notes in Computer Science},
  volume    = {2618},
  publisher = {Springer},
  url       = {https://doi.org/10.1007/3-540-36575-3},
  doi       = {10.1007/3-540-36575-3},
  isbn      = {3-540-00886-1},
}

% -- H --

% -- I --

% -- J --

% Runtime deadlock detection
@inproceedings{jiang2008hierarchical,
  title={Hierarchical run time deadlock detection in process networks},
  author={Jiang, Bin and Deprettere, Ed and Kienhuis, Bart},
  booktitle={Signal Processing Systems, 2008. SiPS 2008. IEEE Workshop on},
  pages={239--244},
  year={2008},
  organization={IEEE}
}

% -- K --

% The Kahn process network paper
@inproceedings{kahn1976coroutines,
  author    = {Gilles Kahn and
               David B. MacQueen},
  title     = {Coroutines and Networks of Parallel Processes},
  booktitle = {{IFIP} Congress},
  pages     = {993--998},
  year      = {1977},
  timestamp = {Thu, 03 Jan 2002 12:03:22 +0100},
  biburl    = {https://dblp.org/rec/bib/conf/ifip/KahnM77},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


% -- L --

% -- M --

% Interaction nets are kind of reactive networks, almost like Petri nets.
% Apparently there are implementations, so if we can convert from KPN to Interaction net can execute that way.
% Lacking detail, just a rough example.
% Not great but might be worth mentioning.
@article{mackie2016compiling,
  title={Compiling Process Networks to Interaction Nets},
  author={Mackie, Ian},
  journal={arXiv preprint arXiv:1609.03640},
  year={2016}
}

% -- N --

% -- O --

% Runtime deadlock detection
@inproceedings{olson2005deadlock,
  title={Deadlock detection for distributed process networks},
  author={Olson, Alex G and Evans, Brian L},
  booktitle={Acoustics, Speech, and Signal Processing, 2005. Proceedings.(ICASSP'05). IEEE International Conference on},
  volume={5},
  pages={v--73},
  year={2005},
  organization={IEEE}
}

% -- P --

% Dynamic scheduling with bounded queues, just increase the size of the queue when a deadlock occurs
@phdthesis{parks1995bounded,
  title={Bounded scheduling of process networks},
  author={Parks, Thomas M},
  year={1995},
  school={University of California. Berkeley, California}
}


% -- Q --

% -- R --

% -- S --

% -- T --

@inproceedings{turjan2002compile,
  title={A compile time based approach for solving out-of-order communication in {Kahn process networks}},
  author={Turjan, Alexandru and Kienhuis, Bart and Deprettere, Ed},
  booktitle={Application-Specific Systems, Architectures and Processors, IEEE International Conference on},
  year={2002},
}


% -- U --

% -- V --

% Compares runtime of Nornir KPN implementation vs pthreads.
% Does not compare against single-threaded implementations.
@inproceedings{vrba2009evaluating,
  title={Evaluating the run-time performance of kahn process network implementation techniques on shared-memory multiprocessors},
  author={Vrba, Zeljko and Halvorsen, Paal and Griwodz, Carsten},
  booktitle={Complex, Intelligent and Software Intensive Systems, 2009. CISIS'09. International Conference on},
  pages={639--644},
  year={2009},
  organization={IEEE}
}

% Irrelevant
@inproceedings{vrba2009kahn,
  title={Kahn process networks are a flexible alternative to {MapReduce}},
  author={Vrba, Zeljko and Halvorsen, P{\aa}l and Griwodz, Carsten and Beskow, Paul},
  booktitle={High Performance Computing and Communications, 2009. HPCC'09. 11th IEEE International Conference on},
  pages={154--162},
  year={2009},
  organization={IEEE}
}


% -- W --

% -- X --

% -- Y --

% -- Z --


